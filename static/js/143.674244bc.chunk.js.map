{"version":3,"file":"static/js/143.674244bc.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","views/PhonebookView/PhonebookView.styled.js","views/PhonebookView/PhonebookView.js"],"sourcesContent":["export const getContacts = state => state.contacts.contacts;\nexport const getStatus = state => state.contacts.status;\nexport const getError = state => state.contacts.error;\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const FormWrapper = styled(Form)`\n  padding: 15px 10px;\n  width: 210px;\n  height: 190px;\n  border: none;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Input = styled(Field)`\n  width: 200px;\n`;\nexport const AddButton = styled.button`\n  margin-top: 10px;\n  background-color: #ff4500;\n  width: 94px;\n  height: 37px;\n\n  transition: background-color 250ms linear;\n  &:hover,\n  &:focus {\n    background-color: #dd3b00;\n    color: white;\n  }\n`;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations } from 'redux/contacts';\nimport { getContacts } from 'redux/contacts/contacts-selectors';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { FormWrapper, AddButton, Input } from './ContactForm.styled';\n\nlet schema = yup.object().shape({\n  name: yup.string().required(),\n  phone: yup.number().required(),\n});\n\nconst initialValues = {\n  name: '',\n  phone: '',\n};\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'phone':\n        return setPhone(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const addedСontank = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (addedСontank) {\n      Notify.failure(`${name} is already in contacts`);\n      return;\n    }\n    dispatch(contactsOperations.addContact({ name, phone }));\n\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <FormWrapper>\n        <h3>Name</h3>\n        <Input\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n        />\n        <ErrorMessage name=\"name\" />\n        <h3>Number</h3>\n        <Input\n          onChange={handleChange}\n          type=\"phone\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={phone}\n        />\n        <ErrorMessage name=\"phone\" />\n        <AddButton type=\"submit\">Add contact</AddButton>\n      </FormWrapper>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  margin: 5px;\n`;\n\nexport const DelButton = styled.button`\n  outline: none;\n  margin-left: 5px;\n  border: 1px solid grey;\n  background-color: white;\n  transition: background-color 250ms linear;\n  &:hover,\n  &:focus {\n    background-color: #0088ff;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { useDispatch } from 'react-redux';\nimport { contactsOperations } from 'redux/contacts/index';\nimport { getFilter } from 'redux/filterSlise';\nimport { getContacts } from 'redux/contacts/contacts-selectors';\nimport { Item, DelButton } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getContacts);\n  const { deleteContact } = contactsOperations;\n\n  const filterContacts = contacts?.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const onDeleteContact = id => {\n    dispatch(deleteContact(id));\n    Notiflix.Notify.success('Сontact removed from list');\n  };\n\n  return (\n    <ul>\n      {contacts &&\n        filterContacts.map(({ id, name, phone }) => (\n          <Item key={id}>\n            {name}: {phone}\n            <DelButton type=\"button\" onClick={() => onDeleteContact(id)}>\n              Delete\n            </DelButton>\n          </Item>\n        ))}\n    </ul>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterInput = styled.input`\n  margin-top: 10px;\n  width: 250px;\n  height: 30px;\n  font-size: 24px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filteredContacts, getFilter } from 'redux/filterSlise';\nimport { FilterInput } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <p>Find contacts by name</p>\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={e => dispatch(filteredContacts(e.target.value))}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\nexport const Title = styled.h1`\n  text-align: center;\n  font-size: 36px;\n  margin-top: 50px;\n  color: black;\n`;\n","import React from 'react';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Container, Title } from './PhonebookView.styled';\n\nconst PhonebookView = () => (\n  <Container>\n    <Title>Phonebook</Title>\n    <ContactForm />\n    <h2>Contacts</h2>\n    <Filter />\n    <ContactList />\n  </Container>\n);\n\nexport default PhonebookView;\n"],"names":["getContacts","state","contacts","FormWrapper","styled","Form","Input","Field","AddButton","schema","yup","shape","name","required","phone","initialValues","ContactForm","useState","setName","setPhone","dispatch","useDispatch","useSelector","handleChange","target","value","validationSchema","onSubmit","e","preventDefault","find","contact","toLowerCase","Notify","contactsOperations","onChange","type","pattern","title","Item","DelButton","ContactList","filter","getFilter","deleteContact","filterContacts","includes","map","id","onClick","Notiflix","onDeleteContact","FilterInput","Filter","filteredContacts","Container","Title"],"sourceRoot":""}