{"version":3,"file":"static/js/143.64f22270.chunk.js","mappings":"+PAAaA,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,E,mBCEnBC,EAAcC,EAAAA,GAAAA,KAAH,gMAWXC,EAAQD,EAAAA,GAAAA,MAAH,yCAGLE,EAAYF,EAAAA,GAAAA,OAAH,6O,UCTTG,EAAc,WACzB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXb,GAAWc,EAAAA,EAAAA,IAAYhB,GAEvBiB,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUR,EAAoB,EAApBA,KAAMS,EAAc,EAAdA,MACtC,OAAQT,GACN,IAAK,OACH,OAAOC,EAAQQ,GACjB,IAAK,QACH,OAAON,EAASM,GAClB,QACE,OAEL,EAcD,OACE,UAACf,EAAD,CAAagB,SAbM,SAAAC,GAGnB,GAFAA,EAAEC,iBACmBpB,EAASqB,MAAK,SAAAC,GAAO,OAAIA,EAAQd,OAASA,CAArB,IAExC,OAAOe,EAAAA,OAAAA,QAAA,UAAkBf,EAAlB,4BAETI,EAASY,EAAAA,EAAAA,WAA8B,CAAEhB,KAAAA,EAAMiB,OAAQf,KAEvDD,EAAQ,IACRE,EAAS,GACV,EAGC,WACE,kCACA,SAACP,EAAD,CACEsB,SAAUX,EACVY,KAAK,OACLnB,KAAK,OACLoB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRb,MAAOT,KAET,oCACA,SAACJ,EAAD,CACEsB,SAAUX,EACVY,KAAK,QACLnB,KAAK,QACLoB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRb,MAAOP,KAET,SAACL,EAAD,CAAWsB,KAAK,SAAhB,2BAGL,E,UC3DYI,EAAO5B,EAAAA,GAAAA,GAAH,wCAIJ6B,EAAY7B,EAAAA,GAAAA,OAAH,kOCCT8B,EAAc,WACzB,IAAMrB,GAAWC,EAAAA,EAAAA,MACXqB,GAASpB,EAAAA,EAAAA,IAAYqB,EAAAA,IACrBnC,GAAWc,EAAAA,EAAAA,IAAYhB,GACrBsC,EAAkBZ,EAAAA,EAAAA,cAEpBa,EAAc,OAAGrC,QAAH,IAAGA,OAAH,EAAGA,EAAUkC,QAAO,SAAAZ,GAAO,OAC7CA,EAAQd,KAAK8B,cAAcC,SAASL,EAAOI,cADE,IAQ/C,OACE,wBACGtC,GACCqC,EAAeG,KAAI,gBAAGC,EAAH,EAAGA,GAAIjC,EAAP,EAAOA,KAAMiB,EAAb,EAAaA,OAAb,OACjB,UAACM,EAAD,WACGvB,EADH,KACWiB,GACT,SAACO,EAAD,CAAWL,KAAK,SAASe,QAAS,kBAVpB,SAAAD,GACtB7B,EAASwB,EAAcK,GACxB,CAQiDE,CAAgBF,EAAtB,EAAlC,sBAFSA,EADM,KAU1B,EChCYG,EAAczC,EAAAA,GAAAA,MAAH,mGCEX0C,EAAS,WACpB,IAAMX,GAASpB,EAAAA,EAAAA,IAAYqB,EAAAA,IACrBvB,GAAWC,EAAAA,EAAAA,MAEjB,OACE,iCACE,kDACA,SAAC+B,EAAD,CACEjB,KAAK,OACLnB,KAAK,SACLS,MAAOiB,EACPR,SAAU,SAAAP,GAAC,OAAIP,GAASkC,EAAAA,EAAAA,IAAiB3B,EAAEH,OAAOC,OAAvC,MAIlB,ECjBY8B,EAAY5C,EAAAA,GAAAA,IAAH,6FAKT6C,EAAQ7C,EAAAA,GAAAA,GAAH,yGCSlB,EAVsB,kBACpB,UAAC4C,EAAD,YACE,SAACC,EAAD,yBACA,SAAC1C,EAAD,KACA,sCACA,SAACuC,EAAD,KACA,SAACZ,EAAD,MANkB,C","sources":["redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","views/PhonebookView/PhonebookView.styled.js","views/PhonebookView/PhonebookView.js"],"sourcesContent":["export const getContacts = state => state.contacts.items;\nexport const getStatus = state => state.contacts.isLoad;\n","import styled from 'styled-components';\n\nexport const FormWrapper = styled.form`\n  padding: 15px 10px;\n  width: 210px;\n  height: 190px;\n  border: none;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n`;\nexport const AddButton = styled.button`\n  margin-top: 10px;\n  background-color: #ff4500;\n  width: 94px;\n  height: 37px;\n\n  transition: background-color 250ms linear;\n  &:hover,\n  &:focus {\n    background-color: #dd3b00;\n    color: white;\n  }\n`;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { contactsOperations } from 'redux/contacts';\nimport { getContacts } from 'redux/contacts/contacts-selectors';\nimport { FormWrapper, AddButton, Input } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'phone':\n        return setPhone(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const addedСontank = contacts.find(contact => contact.name === name);\n    if (addedСontank) {\n      return Notify.failure(`${name} is already in contacts`);\n    }\n    dispatch(contactsOperations.addContact({ name, number: phone }));\n\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <FormWrapper onSubmit={handleSubmit}>\n      <h3>Name</h3>\n      <Input\n        onChange={handleChange}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={name}\n      />\n      <h3>Number</h3>\n      <Input\n        onChange={handleChange}\n        type=\"phone\"\n        name=\"phone\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        value={phone}\n      />\n      <AddButton type=\"submit\">Add contact</AddButton>\n    </FormWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  margin: 5px;\n`;\n\nexport const DelButton = styled.button`\n  outline: none;\n  margin-left: 5px;\n  border: 1px solid grey;\n  background-color: white;\n  transition: background-color 250ms linear;\n  &:hover,\n  &:focus {\n    background-color: #0088ff;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { contactsOperations } from 'redux/contacts/index';\nimport { getFilter } from 'redux/filterSlise';\nimport { getContacts } from 'redux/contacts/contacts-selectors';\nimport { Item, DelButton } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getContacts);\n  const { deleteContact } = contactsOperations;\n\n  const filterContacts = contacts?.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const onDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <ul>\n      {contacts &&\n        filterContacts.map(({ id, name, number }) => (\n          <Item key={id}>\n            {name}: {number}\n            <DelButton type=\"button\" onClick={() => onDeleteContact(id)}>\n              Delete\n            </DelButton>\n          </Item>\n        ))}\n    </ul>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterInput = styled.input`\n  margin-top: 10px;\n  width: 250px;\n  height: 30px;\n  font-size: 24px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filteredContacts, getFilter } from 'redux/filterSlise';\nimport { FilterInput } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <p>Find contacts by name</p>\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={e => dispatch(filteredContacts(e.target.value))}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\nexport const Title = styled.h1`\n  text-align: center;\n  font-size: 36px;\n  margin-top: 50px;\n  color: black;\n`;\n","import React from 'react';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Container, Title } from './PhonebookView.styled';\n\nconst PhonebookView = () => (\n  <Container>\n    <Title>Phonebook</Title>\n    <ContactForm />\n    <h2>Contacts</h2>\n    <Filter />\n    <ContactList />\n  </Container>\n);\n\nexport default PhonebookView;\n"],"names":["getContacts","state","contacts","items","FormWrapper","styled","Input","AddButton","ContactForm","useState","name","setName","phone","setPhone","dispatch","useDispatch","useSelector","handleChange","target","value","onSubmit","e","preventDefault","find","contact","Notify","contactsOperations","number","onChange","type","pattern","title","required","Item","DelButton","ContactList","filter","getFilter","deleteContact","filterContacts","toLowerCase","includes","map","id","onClick","onDeleteContact","FilterInput","Filter","filteredContacts","Container","Title"],"sourceRoot":""}