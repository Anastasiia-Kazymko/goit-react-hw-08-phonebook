{"version":3,"file":"static/js/299.af908f35.chunk.js","mappings":"yPAKe,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACtC,OAAQR,GACN,IAAK,OACH,OAAOC,EAAQO,GACjB,IAAK,QACH,OAAOL,EAASK,GAClB,IAAK,WACH,OAAOH,EAAYG,GACrB,QACE,OAEL,EAUD,OACE,4BACE,SAAC,KAAD,4BAEA,UAAC,KAAD,CAAYC,SAZK,SAAAC,GACnBA,EAAEC,iBACFd,EAASe,EAAAA,GAAAA,SAAwB,CAAEZ,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAChDH,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAMuCQ,aAAa,MAAjD,WACE,8BACE,iCACA,kBACEC,KAAK,OACLd,KAAK,OACLe,YAAY,OACZP,MAAOR,EACPgB,SAAUV,QAId,8BACE,mCACA,kBACEQ,KAAK,QACLd,KAAK,QACLe,YAAY,oBACZP,MAAON,EACPc,SAAUV,QAId,8BACE,qCACA,kBACEQ,KAAK,WACLd,KAAK,WACLe,YAAY,WACZP,MAAOJ,EACPY,SAAUV,QAId,SAAC,KAAD,CAAQQ,KAAK,SAAb,+BAIP,C,qICxEYG,EAAQC,EAAAA,GAAAA,GAAH,yGAOLC,EAAaD,EAAAA,GAAAA,KAAH,ycAwBVE,EAASF,EAAAA,GAAAA,OAAH,uN","sources":["views/RegisterView/RegisterView.js","views/RegisterView/RegisterView.styled.js"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../../redux/auth';\nimport { FormStyled, Button, Title } from './RegisterView.styled';\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <Title>Registration</Title>\n\n      <FormStyled onSubmit={handleSubmit} autoComplete=\"off\">\n        <label>\n          <p>Name</p>\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Name\"\n            value={name}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label>\n          <p>E-mail</p>\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"example@email.com\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label>\n          <p>Password</p>\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n\n        <Button type=\"submit\">Registration</Button>\n      </FormStyled>\n    </div>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  text-align: center;\n  font-size: 36px;\n  margin-top: 50px;\n  color: black;\n`;\n\nexport const FormStyled = styled.form`\n  margin-top: 20px;\n  padding: 15px 10px;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  & p {\n    margin: 0;\n    font-size: 20px;\n  }\n  & input {\n    margin-top: 5px;\n    margin-bottom: 10px;\n    border-radius: 2%;\n    border: 2px solid black;\n    outline: none;\n    font-size: 24px;\n    transition: border-color 250ms linear;\n    &:focus-visible {\n      border-color: orangered;\n    }\n  }\n`;\n\nexport const Button = styled.button`\n  background-color: #ff4500;\n  width: 94px;\n  height: 37px;\n\n  transition: background-color 250ms linear;\n  &:hover,\n  &:focus {\n    background-color: #dd3b00;\n    color: white;\n  }\n`;\n"],"names":["RegisterView","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","onSubmit","e","preventDefault","authOperations","autoComplete","type","placeholder","onChange","Title","styled","FormStyled","Button"],"sourceRoot":""}