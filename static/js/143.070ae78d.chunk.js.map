{"version":3,"file":"static/js/143.070ae78d.chunk.js","mappings":"wQAEaA,EAAcC,EAAAA,GAAAA,KAAH,gMAWXC,EAAQD,EAAAA,GAAAA,MAAH,yCAGLE,EAAYF,EAAAA,GAAAA,OAAH,6O,UCXTG,EAAc,WACzB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAGXC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACtC,OAAQR,GACN,IAAK,OACH,OAAOC,EAAQO,GACjB,IAAK,QACH,OAAOL,EAASK,GAClB,QACE,OAEL,EAWD,OACE,UAACd,EAAD,CAAae,SAVM,SAAAC,GACnBA,EAAEC,iBAEFP,EAASQ,EAAAA,EAAAA,WAA8B,CAAEZ,KAAAA,EAAMa,OAAQX,KAEvDD,EAAQ,IACRE,EAAS,GACV,EAGC,WACE,kCACA,SAACP,EAAD,CACEkB,SAAUR,EACVS,KAAK,OACLf,KAAK,OACLgB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRV,MAAOR,KAET,oCACA,SAACJ,EAAD,CACEkB,SAAUR,EACVS,KAAK,QACLf,KAAK,QACLgB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRV,MAAON,KAET,SAACL,EAAD,CAAWkB,KAAK,SAAhB,2BAGL,E,6BCxDYI,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,ECEnBC,EAAO5B,EAAAA,GAAAA,GAAH,wCAIJ6B,EAAY7B,EAAAA,GAAAA,OAAH,kOCET8B,EAAc,WACzB,IAAMrB,GAAWC,EAAAA,EAAAA,MACXqB,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IACrBP,GAAWM,EAAAA,EAAAA,IAAYR,GACrBU,EAAkBjB,EAAAA,EAAAA,cAC1BkB,QAAQC,IAAIV,GAEZ,IAAMW,EAAc,OAAGX,QAAH,IAAGA,OAAH,EAAGA,EAAUK,QAAO,SAAAO,GAAO,OAC7CA,EAAQjC,KAAKkC,cAAcC,SAAST,EAAOQ,cADE,IAS/C,OACE,wBACGb,GACCW,EAAeI,KAAI,gBAAGC,EAAH,EAAGA,GAAIrC,EAAP,EAAOA,KAAMa,EAAb,EAAaA,OAAb,OACjB,UAACU,EAAD,WACGvB,EADH,KACWa,GACT,SAACW,EAAD,CAAWT,KAAK,SAASuB,QAAS,kBAXpB,SAAAD,GACtBjC,EAASyB,EAAcQ,IACvBE,IAAAA,OAAAA,QAAwB,iCACzB,CAQiDC,CAAgBH,EAAtB,EAAlC,sBAFSA,EADM,KAU1B,ECnCYI,EAAc9C,EAAAA,GAAAA,MAAH,mGCEX+C,EAAS,WACpB,IAAMhB,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IACrBxB,GAAWC,EAAAA,EAAAA,MAEjB,OACE,iCACE,kDACA,SAACoC,EAAD,CACE1B,KAAK,OACLf,KAAK,SACLQ,MAAOkB,EACPZ,SAAU,SAAAJ,GAAC,OAAIN,GAASuC,EAAAA,EAAAA,IAAiBjC,EAAEH,OAAOC,OAAvC,MAIlB,ECjBYoC,EAAYjD,EAAAA,GAAAA,IAAH,6FAKTkD,EAAQlD,EAAAA,GAAAA,GAAH,yGCSlB,EAVsB,kBACpB,UAACiD,EAAD,YACE,SAACC,EAAD,yBACA,SAAC/C,EAAD,KACA,sCACA,SAAC4C,EAAD,KACA,SAACjB,EAAD,MANkB,C","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","redux/contacts/contacts-selectors.js","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","views/PhonebookView/PhonebookView.styled.js","views/PhonebookView/PhonebookView.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormWrapper = styled.form`\n  padding: 15px 10px;\n  width: 210px;\n  height: 190px;\n  border: none;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n`;\nexport const AddButton = styled.button`\n  margin-top: 10px;\n  background-color: #ff4500;\n  width: 94px;\n  height: 37px;\n\n  transition: background-color 250ms linear;\n  &:hover,\n  &:focus {\n    background-color: #dd3b00;\n    color: white;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { contactsOperations } from 'redux/contacts';\nimport { FormWrapper, AddButton, Input } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const dispatch = useDispatch();\n  //const contacts = useSelector(getContacts);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'phone':\n        return setPhone(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(contactsOperations.addContact({ name, number: phone }));\n\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <FormWrapper onSubmit={handleSubmit}>\n      <h3>Name</h3>\n      <Input\n        onChange={handleChange}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={name}\n      />\n      <h3>Number</h3>\n      <Input\n        onChange={handleChange}\n        type=\"phone\"\n        name=\"phone\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        value={phone}\n      />\n      <AddButton type=\"submit\">Add contact</AddButton>\n    </FormWrapper>\n  );\n};\n","export const getContacts = state => state.contacts.items;\nexport const getStatus = state => state.contacts.isLoad;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  margin: 5px;\n`;\n\nexport const DelButton = styled.button`\n  outline: none;\n  margin-left: 5px;\n  border: 1px solid grey;\n  background-color: white;\n  transition: background-color 250ms linear;\n  &:hover,\n  &:focus {\n    background-color: #0088ff;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { useDispatch } from 'react-redux';\nimport { contactsOperations } from 'redux/contacts/index';\nimport { getFilter } from 'redux/filterSlise';\nimport { getContacts } from 'redux/contacts/contacts-selectors';\nimport { Item, DelButton } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getContacts);\n  const { deleteContact } = contactsOperations;\n  console.log(contacts);\n\n  const filterContacts = contacts?.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const onDeleteContact = id => {\n    dispatch(deleteContact(id));\n    Notiflix.Notify.success('Сontact removed from list');\n  };\n\n  return (\n    <ul>\n      {contacts &&\n        filterContacts.map(({ id, name, number }) => (\n          <Item key={id}>\n            {name}: {number}\n            <DelButton type=\"button\" onClick={() => onDeleteContact(id)}>\n              Delete\n            </DelButton>\n          </Item>\n        ))}\n    </ul>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterInput = styled.input`\n  margin-top: 10px;\n  width: 250px;\n  height: 30px;\n  font-size: 24px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filteredContacts, getFilter } from 'redux/filterSlise';\nimport { FilterInput } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <p>Find contacts by name</p>\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={e => dispatch(filteredContacts(e.target.value))}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\nexport const Title = styled.h1`\n  text-align: center;\n  font-size: 36px;\n  margin-top: 50px;\n  color: black;\n`;\n","import React from 'react';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Container, Title } from './PhonebookView.styled';\n\nconst PhonebookView = () => (\n  <Container>\n    <Title>Phonebook</Title>\n    <ContactForm />\n    <h2>Contacts</h2>\n    <Filter />\n    <ContactList />\n  </Container>\n);\n\nexport default PhonebookView;\n"],"names":["FormWrapper","styled","Input","AddButton","ContactForm","useState","name","setName","phone","setPhone","dispatch","useDispatch","handleChange","target","value","onSubmit","e","preventDefault","contactsOperations","number","onChange","type","pattern","title","required","getContacts","state","contacts","items","Item","DelButton","ContactList","filter","useSelector","getFilter","deleteContact","console","log","filterContacts","contact","toLowerCase","includes","map","id","onClick","Notiflix","onDeleteContact","FilterInput","Filter","filteredContacts","Container","Title"],"sourceRoot":""}